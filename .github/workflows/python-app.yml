       
name: Flask with cpolar (Guaranteed Startup)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */4 * * *'  # 每4小时重启（避免6小时限制）

jobs:
  run-service:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip jq
        
        # 安装cpolar（使用官方推荐的静默安装方式）
        curl -sL https://www.cpolar.com/static/downloads/install-release-cpolar.sh | sudo bash
        sudo cpolar service install --accept-tcp-term
        echo "NWQwYWM4NDMtOTE2Ni00NTA2LThlNjctMzdhZDlkNjhlMjQ0" | sudo cpolar authtoken -
        
        pip install -r requirements.txt

    - name: Start services and get URL
      id: run-app
      run: |
        # 1. 启动Flask应用（后台）
        nohup python main.py > app.log 2>&1 &
        echo "Flask PID: $!"
        
        # 2. 启动cpolar隧道（使用systemd服务）
        sudo cpolar service start http --port 5000 --hostname flask-app --region hk
        
        # 3. 等待并获取公网URL（重试机制）
        sleep 30
        for i in {1..10}; do
          PUBLIC_URL=$(sudo cpolar service status http --format json | jq -r '.public_url')
          if [ -n "$PUBLIC_URL" ]; then
            echo "::set-output name=public_url::$PUBLIC_URL"
            break
          fi
          echo "Attempt $i: Waiting for cpolar to start..."
          sleep 15
        done
        
        # 4. 持续日志输出
        tail -f app.log /var/log/cpolar/*.log
      timeout-minutes: 30

    - name: Show public URL
      run: |
        if [ -n "${{ steps.run-app.outputs.public_url }}" ]; then
          echo "🌐 公网访问地址: ${{ steps.run-app.outputs.public_url }}"
        else
          echo "❌ 未能获取公网URL，请检查日志"
          exit 1
        fi

