
# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "gh-pages" ]
  pull_request:
    branches: [ "gh-pages" ]

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12.4
      uses: actions/setup-python@v3
      with:
        python-version: "3.12.4"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest mkdocs mkdocs-material
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Build MkDocs site
        run: mkdocs build --site-dir ./build-output  # 构建到./build-output目录
        with:
          ref: gh-pages  # 明确指定检出gh-pages分支
          
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Commit and Push Built Files
        run: |
          git config user.name "BuelieR"
          git config user.email "yydsfps@163.com"
          git add ./build-output/*  # 添加构建结果
          git commit -m "Automated build: $(date +'%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
          git push origin gh-pages
